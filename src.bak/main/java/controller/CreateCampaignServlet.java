package controller;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;
import model.*;
import util.CloudinaryUtil;

import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;

@WebServlet(name = "CreateCampaignServlet", value = {"/CreateCampaignServlet", "/create-campaign"})
@MultipartConfig(
    fileSizeThreshold = 1024 * 1024,    // 1 MB
    maxFileSize = 1024 * 1024 * 10,     // 10 MB
    maxRequestSize = 1024 * 1024 * 50   // 50 MB
)
public class CreateCampaignServlet extends HttpServlet {
    
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Forward to the create campaign page
        request.getRequestDispatcher("/WEB-INF/view/create-campaign.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession();
        User currentUser = (User) session.getAttribute("user");
        
        if (currentUser == null) {
            session.setAttribute("error", "You must be logged in to create a campaign");
            response.sendRedirect(request.getContextPath() + "/LoginServlet");
            return;
        }
        
        // Extract campaign data from form
        String title = request.getParameter("title");
        String description = request.getParameter("description");
        String goalAmountStr = request.getParameter("goalAmount");
        String deadlineStr = request.getParameter("deadline");
        String categoryIdStr = request.getParameter("categoryId");
        String donationType = request.getParameter("donationType");
        
        // Validate form data
        if (title == null || title.trim().isEmpty() ||
            description == null || description.trim().isEmpty() ||
            goalAmountStr == null || goalAmountStr.trim().isEmpty() ||
            deadlineStr == null || deadlineStr.trim().isEmpty() ||
            categoryIdStr == null || categoryIdStr.trim().isEmpty() ||
            donationType == null || donationType.trim().isEmpty()) {
            
            request.setAttribute("error", "All fields are required");
            request.getRequestDispatcher("/WEB-INF/view/create-campaign.jsp").forward(request, response);
            return;
        }
        
        // Validate donation type
        if (!donationType.equals("monetary") && !donationType.equals("clothes")) {
            donationType = "monetary"; // Default to monetary if invalid value
        }
        
        try {
            // Parse numeric values
            BigDecimal goalAmount = new BigDecimal(goalAmountStr);
            int categoryId = Integer.parseInt(categoryIdStr);
            
            // Parse deadline
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date utilDate = dateFormat.parse(deadlineStr);
            Date sqlDate = new Date(utilDate.getTime());
            
            // Get the current user ID
            int createdBy = currentUser.getUser_id();
            
            // Handle file upload for campaign image
            Part filePart = request.getPart("campaignImage");
            String imageUrl = "/assets/img/default-campaign.jpg";
            String imagePublicId = "default-campaign";
            
            if (filePart != null && filePart.getSize() > 0) {
                try {
                    // Upload to Cloudinary
                    Map uploadResult = CloudinaryUtil.uploadImage(filePart);
                    
                    if (uploadResult != null) {
                        // Get the public URL and public ID from the result
                        imageUrl = (String) uploadResult.get("secure_url");
                        imagePublicId = (String) uploadResult.get("public_id");
                    }
                } catch (IOException e) {
                    // Log error but continue with default image
                    System.err.println("Error uploading image to Cloudinary: " + e.getMessage());
                    e.printStackTrace();
                }
            }
            
            // Create Campaign object
            Campaign campaign = new Campaign(
                0, // ID will be generated by database
                title,
                description,
                goalAmount,
                sqlDate,
                createdBy,
                categoryId,
                imageUrl,
                imagePublicId,
                "pending", // Default status for new campaigns
                donationType // Set the donation type
            );
            
            // Save to database
            try (Connection conn = DatabaseConnection.getConnection()) {
                CampaignDAO campaignDAO = new CampaignDAO(conn);
                boolean success = campaignDAO.createCampaign(campaign);
                
                if (success) {
                    session.setAttribute("success", "Campaign created successfully! It will be reviewed by an administrator.");
                    response.sendRedirect(request.getContextPath() + "/MyCampaignsServlet");
                } else {
                    // If database save fails, also delete the uploaded image
                    if (!"default-campaign".equals(imagePublicId)) {
                        CloudinaryUtil.deleteImage(imagePublicId);
                    }
                    request.setAttribute("error", "Failed to create campaign. Please try again.");
                    request.getRequestDispatcher("/WEB-INF/view/create-campaign.jsp").forward(request, response);
                }
            } catch (Exception e) {
                // If exception occurs, also delete the uploaded image
                if (!"default-campaign".equals(imagePublicId)) {
                    CloudinaryUtil.deleteImage(imagePublicId);
                }
                request.setAttribute("error", "Database error: " + e.getMessage());
                request.getRequestDispatcher("/WEB-INF/view/create-campaign.jsp").forward(request, response);
            }
            
        } catch (NumberFormatException e) {
            request.setAttribute("error", "Please enter valid numbers for goal amount and category");
            request.getRequestDispatcher("/WEB-INF/view/create-campaign.jsp").forward(request, response);
        } catch (ParseException e) {
            request.setAttribute("error", "Please enter a valid date format (YYYY-MM-DD)");
            request.getRequestDispatcher("/WEB-INF/view/create-campaign.jsp").forward(request, response);
        }
    }
} 